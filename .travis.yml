# Created with package:mono_repo v1.2.1
language: dart

jobs:
  include:
    - stage: analyzer_and_format
      name: "SDK: dev - DIR: src - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer_0
      env: PKG="src"
      dart: dev
    - stage: analyzer_and_format_stable
      name: "SDK: stable - DIR: src - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-warnings .]"
      script: ./tool/travis.sh dartfmt dartanalyzer_1
      env: PKG="src"
      dart: stable
    - stage: unit_test
      name: "SDK: stable - DIR: src - TASKS: pub run test"
      script: ./tool/travis.sh dart_test
      env: PKG="src"
      dart: stable
    - stage: unit_test
      name: "SDK: 2.1.0 - DIR: src - TASKS: pub run test"
      script: ./tool/travis.sh dart_test
      env: PKG="src"
      dart: "2.1.0"
    - stage: unit_test
      name: "SDK: dev - DIR: src - TASKS: pub run test"
      script: ./tool/travis.sh dart_test
      env: PKG="src"
      dart: dev
    - stage: example_unit_test_and_analyzer
      name: "FLUTTER_SDK: 1.5.4-hotfix.2-stable - DIR: example - TASKS: [dartfmt -n --set-exit-if-changed ., dartanalyzer --fatal-infos --fatal-warnings ., flutter test]"
      language: generic
      os: linux
      env: PKG="example"
      before_script:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null

        # install pre-compiled flutter
        - FLUTTER_CHANNEL=stable
        - FLUTTER_VERSION=1.5.4-hotfix.2-${FLUTTER_CHANNEL}
        - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz && tar xf flutter.tar.xz > /dev/null && rm flutter.tar.xz
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter doctor -v
      script:
        - ./tool/travis.sh dartfmt dartanalyzer_0
        - ./tool/travis.sh dartfmt dartanalyzer_1
        - ./tool/travis.sh flutter_test
      cache:
        directories:
          - $HOME/.pub-cache
    - stage: test_coverage
      name: "FLUTTER_SDK: 1.5.4-hotfix.2-stable - DIR: . - TASKS: run_tests"
      language: generic
      os: linux
      env: PKG="."
      before_script:
        - sudo apt-get install -y --no-install-recommends lib32stdc++6 libstdc++6 > /dev/null

        # install pre-compiled flutter
        - FLUTTER_CHANNEL=stable
        - FLUTTER_VERSION=1.5.4-hotfix.2-${FLUTTER_CHANNEL}
        - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz && tar xf flutter.tar.xz > /dev/null && rm flutter.tar.xz
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter doctor -v

        - pub global activate coverage
      script:
        - ./tool/travis_flutter.sh
      after_success: bash <(curl -s https://codecov.io/bash) -f lcov.info
    - stage: example_integration_test
      name: "FLUTTER_SDK: 1.5.4-hotfix.2-stable - DIR: example - TASKS: flutter driver --target=test_driver/app.dart"
      os: osx
      # use oldest flutter supported version of xcode
      osx_image: xcode8.0
      
      env: PKG="example"
      # Run integration tests on ios
      before_install:
        - open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app
        - export HOMEBREW_NO_AUTO_UPDATE=1
        - brew install libimobiledevice
        - brew install ideviceinstaller
        - brew install ios-deploy
        - brew install cocoapods || echo 'ignore exit(1)'
        - brew link --overwrite cocoapods

        # install pre-compiled flutter
        - FLUTTER_CHANNEL=stable
        - FLUTTER_VERSION=1.5.4-hotfix.2-${FLUTTER_CHANNEL}
        - wget --quiet --output-document=flutter.zip https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/macos/flutter_macos_v${FLUTTER_VERSION}.zip && unzip -qq flutter.zip > /dev/null && rm flutter.zip
        - export PATH="$PATH":"$HOME/.pub-cache/bin"
        - export PATH=$PWD/flutter/bin:$PWD/flutter/bin/cache/dart-sdk/bin:$PATH
        - flutter doctor -v
      script: ./tool/travis.sh flutter_test_driver

stages:
  # - analyzer_and_format
  # - analyzer_and_format_stable
  # - unit_test
  # - example_unit_test_and_analyzer
  # - example_integration_test
  - test_coverage

# Only building master means that we don't run two builds for each pull request.
branches:
  only:
    - develop

cache:
  directories:
    - "$HOME/.pub-cache"
